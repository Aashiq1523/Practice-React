[{"D:\\MyWork\\GitHub\\Practice\\React\\reactnativeweb\\src\\index.js":"1","D:\\MyWork\\GitHub\\Practice\\React\\reactnativeweb\\src\\App.js":"2","D:\\MyWork\\GitHub\\Practice\\React\\reactnativeweb\\src\\Components\\RightSidePanel\\RightSidePanel.js":"3","D:\\MyWork\\GitHub\\Practice\\React\\reactnativeweb\\src\\Components\\LeftSidePanel\\LeftSidePanel.js":"4","D:\\MyWork\\GitHub\\Practice\\React\\reactnativeweb\\src\\Components\\Button\\Button.js":"5","D:\\MyWork\\GitHub\\Practice\\React\\reactnativeweb\\src\\CompanyPanel\\CompanyPanel.js":"6","D:\\MyWork\\GitHub\\Practice\\React\\reactnativeweb\\src\\EmployeePanel\\EmployeePanel.js":"7","D:\\MyWork\\GitHub\\Practice\\React\\reactnativeweb\\src\\EmployeeGrid\\EmployeeGrid.js":"8","D:\\MyWork\\GitHub\\Practice\\React\\reactnativeweb\\src\\CompanyGrid\\CompanyGrid.js":"9","D:\\MyWork\\GitHub\\Practice\\React\\reactnativeweb\\src\\CompanyForm\\CompanyForm.js":"10","D:\\MyWork\\GitHub\\Practice\\React\\reactnativeweb\\src\\EmployeeForm\\EmployeeForm.js":"11","D:\\MyWork\\GitHub\\Practice\\React\\reactnativeweb\\src\\CustomTable\\CustomTable.js":"12"},{"size":1035,"mtime":1607762287845,"results":"13","hashOfConfig":"14"},{"size":907,"mtime":1608621535051,"results":"15","hashOfConfig":"14"},{"size":1126,"mtime":1608533559306,"results":"16","hashOfConfig":"14"},{"size":2728,"mtime":1608228017565,"results":"17","hashOfConfig":"14"},{"size":800,"mtime":1608124293303,"results":"18","hashOfConfig":"14"},{"size":809,"mtime":1608531904507,"results":"19","hashOfConfig":"14"},{"size":819,"mtime":1608532432025,"results":"20","hashOfConfig":"14"},{"size":1584,"mtime":1608532461261,"results":"21","hashOfConfig":"14"},{"size":1579,"mtime":1608535703852,"results":"22","hashOfConfig":"14"},{"size":5337,"mtime":1608705543281,"results":"23","hashOfConfig":"14"},{"size":5609,"mtime":1608554877188,"results":"24","hashOfConfig":"14"},{"size":7444,"mtime":1608540958149,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"rsykhk",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},"D:\\MyWork\\GitHub\\Practice\\React\\reactnativeweb\\src\\index.js",[],["52","53"],"D:\\MyWork\\GitHub\\Practice\\React\\reactnativeweb\\src\\App.js",[],"D:\\MyWork\\GitHub\\Practice\\React\\reactnativeweb\\src\\Components\\RightSidePanel\\RightSidePanel.js",[],"D:\\MyWork\\GitHub\\Practice\\React\\reactnativeweb\\src\\Components\\LeftSidePanel\\LeftSidePanel.js",[],"D:\\MyWork\\GitHub\\Practice\\React\\reactnativeweb\\src\\Components\\Button\\Button.js",[],"D:\\MyWork\\GitHub\\Practice\\React\\reactnativeweb\\src\\CompanyPanel\\CompanyPanel.js",[],"D:\\MyWork\\GitHub\\Practice\\React\\reactnativeweb\\src\\EmployeePanel\\EmployeePanel.js",[],"D:\\MyWork\\GitHub\\Practice\\React\\reactnativeweb\\src\\EmployeeGrid\\EmployeeGrid.js",[],"D:\\MyWork\\GitHub\\Practice\\React\\reactnativeweb\\src\\CompanyGrid\\CompanyGrid.js",[],"D:\\MyWork\\GitHub\\Practice\\React\\reactnativeweb\\src\\CompanyForm\\CompanyForm.js",["54"],"D:\\MyWork\\GitHub\\Practice\\React\\reactnativeweb\\src\\EmployeeForm\\EmployeeForm.js",[],"D:\\MyWork\\GitHub\\Practice\\React\\reactnativeweb\\src\\CustomTable\\CustomTable.js",["55"],"import React, { useState, useEffect } from 'react';\r\nimport { View, StyleSheet, Text, ScrollView, TouchableOpacity } from 'react-native';\r\nimport Button from '../Components/Button/Button';\r\nimport {widthPercentageToDP as wp, heightPercentageToDP as hp} from 'react-native-responsive-screen';\r\nimport Employees from '../data/Employee.json';\r\nimport Companies from '../data/Company.json';\r\n\r\nconst CustomTable = (props) => {\r\n\r\n    const {isBoolean, setFormData} = props;\r\n    const [data, setData] = useState();  \r\n            \r\n    useEffect(() => {\r\n        setData(isBoolean ? Companies.companies : Employees.employees);                \r\n    }, []);                \r\n\r\n    return (\r\n\r\n        <View style = {style.box}>\r\n            <View style = {style.boxheader}>\r\n                <View style = {style.boxCellHeader}>\r\n                    <Text style = {style.textCellHeader}>ID</Text>\r\n                </View>\r\n                <View style = {style.boxCellHeader}>\r\n                    <Text style = {style.textCellHeader}>Name</Text>\r\n                </View>\r\n                <View style = {style.boxCellHeader}>\r\n                    <Text style = {style.textCellHeader}>Address</Text>\r\n                </View>\r\n                <View style = {style.boxDeleteCellHeader}>\r\n                    <Text style = {style.textCellHeader}>Delete</Text>\r\n                </View>\r\n            </View>\r\n\r\n            <View style = {style.boxContent}>\r\n                <ScrollView>\r\n                {\r\n                    data && data.map((detail, index) => (\r\n                        <TouchableOpacity onPress = {() => setFormData(detail)} style = {style.boxRowContent} key = {index}>\r\n                            <View style = {style.boxId}>\r\n                                <Text style = {style.textCellContent}>{detail.id}</Text>\r\n                            </View>\r\n                            <View style = {style.boxName}>\r\n                                <Text style = {style.textCellContent}>{detail.name}</Text>\r\n                            </View>\r\n                            <View style = {style.boxAddress}>\r\n                                <Text style = {style.textCellContent}>{detail.address}</Text>\r\n                            </View>\r\n                            <View style = {style.boxDelete}>\r\n                                <Button name = \"Delete\" \r\n                                        buttonStyle = {style.deleteButton}\r\n                                        textStyle = {style.deleteButtonText}\r\n                                        isDisabled = {false}\r\n                                        />  \r\n                            </View>                    \r\n                        </TouchableOpacity>                                            \r\n                    ))                                                                                \r\n                }                    \r\n                </ScrollView>\r\n            </View>                        \r\n        </View>\r\n    );\r\n}\r\n\r\nconst style = StyleSheet.create({\r\n    box: {\r\n        height: hp('45%'),\r\n        borderWidth: 1,        \r\n        borderStyle: 'solid',\r\n        borderColor: '#000000',\r\n    },\r\n    boxheader: {\r\n        flexDirection: 'row',\r\n        height: hp('4.1%'),\r\n        backgroundColor: '#7395ae',        \r\n    },\r\n    boxContent: {        \r\n        height: hp('41%'),\r\n    },\r\n    boxCellHeader: {\r\n        width: wp('19.04%'),\r\n        paddingTop: '0.4%',\r\n        borderWidth: 1,                \r\n        borderStyle: 'solid',\r\n        borderColor: '#000000',\r\n    },\r\n    boxDeleteCellHeader: {\r\n        width: wp('19.35%'),\r\n        paddingTop: '0.4%',\r\n        borderWidth: 1,                \r\n        borderStyle: 'solid',\r\n        borderColor: '#000000',\r\n    },\r\n    textCellHeader: {\r\n        textAlign: 'center',\r\n        fontSize: '1.2rem',\r\n        fontWeight: 'bold',        \r\n        fontFamily: 'TimesNewRoman',\r\n        color: '#ffffff',\r\n    },\r\n    boxRowContent: {\r\n        flexDirection: 'row',\r\n        backgroundColor: '#cafafe',\r\n        height: hp('4.1%'),        \r\n    },\r\n    boxId: {\r\n        width: wp('19.04%'),\r\n        paddingTop: '0.4%',\r\n        borderWidth: 1,                \r\n        borderStyle: 'solid',\r\n        borderColor: '#000000',\r\n    },\r\n    boxName: {\r\n        width: wp('19.04%'),\r\n        paddingTop: '0.4%',\r\n        borderWidth: 1,                \r\n        borderStyle: 'solid',\r\n        borderColor: '#000000',\r\n    },\r\n    boxAddress: {\r\n        width: wp('19.04%'),\r\n        paddingTop: '0.4%',\r\n        borderWidth: 1,                \r\n        borderStyle: 'solid',\r\n        borderColor: '#000000',\r\n    },\r\n    boxDelete: {\r\n        width: wp('19.04%'),\r\n        paddingTop: '0.3%',\r\n        borderWidth: 1,                \r\n        borderStyle: 'solid',\r\n        borderColor: '#000000',\r\n    },\r\n    textCellContent: {\r\n        textAlign: 'center',\r\n        fontSize: '1.2rem',\r\n        fontFamily: 'TimesNewRoman',\r\n        color: '#000000',\r\n    },\r\n    deleteButton: {\r\n        height: hp('3%'),\r\n        width: wp('5%'), \r\n        paddingTop: '0.8%',   \r\n        margin: 'auto',        \r\n        backgroundColor: '#501b1d',\r\n    },\r\n    deleteButtonText: {\r\n        textAlign: 'center',\r\n        color: '#ffffff',        \r\n        fontFamily: 'TimesNewRoman',\r\n        fontSize: '1.1rem',\r\n    }\r\n});\r\n\r\nexport default CustomTable;\r\n\r\n\r\n\r\n// import React, { Component } from 'react';\r\n// import { Button, View } from 'react-native';\r\n// import { Table, Row, TableWrapper, Rows } from 'react-native-table-component';\r\n\r\n// class CustomTable extends Component {\r\n\r\n//     constructor(props) {\r\n        \r\n//         super(props);\r\n//         this.state = {\r\n//             tableHeader: ['ID', 'Name', 'Address', 'Delete'],\r\n//             tableData: [\r\n//                 ['1', 'Ajith', 'Kolathur', 'delete'],\r\n//                 ['2', 'Chandru', 'Cheiyar', 'delete'],\r\n//                 ['3', 'Daniel', 'Korattur', 'delete'],\r\n//                 ['4', 'Alphin', 'Pattabiram', 'delete'],\r\n//                 ['5', 'Gowri', 'Osur', 'delete'],\r\n//                 ['6', 'Praveen', 'Avadi', 'delete'],\r\n//                 ['7', 'Murugan', 'Gudiyatham', 'delete'],\r\n//                 ['8', 'Vignesh', 'Madurai', 'delete'],\r\n//                 ['9', 'Mukesh', 'Trichy', 'delete'],\r\n//                 ['10', 'Mukil', 'Thiruchankodu', 'delete'],\r\n//             ],\r\n//         }        \r\n//     }\r\n\r\n//     render() {\r\n\r\n//         const state = this.state;\r\n\r\n//         const element = (data, index) => (\r\n//             <Button/>\r\n//         );\r\n\r\n//         return(\r\n//             <View>\r\n//                 <Table>\r\n//                     <Row data={state.tableHeader}/>\r\n//                     {\r\n//                         state.tableData.map((rowData, index) => (\r\n//                             <TableWrapper key={index}>\r\n//                             {\r\n//                                 rowData.map((cellData, cellIndex) => (\r\n//                                     <Rows key={cellIndex} data={cellIndex === 3 ? element(cellData, index) : cellData}/>\r\n//                                 ))\r\n//                             }\r\n//                             </TableWrapper>\r\n//                         ))\r\n//                     }\r\n//                 </Table>\r\n//             </View>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default CustomTable;\r\n\r\n\r\n\r\n",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":12,"column":11,"nodeType":"62","messageId":"63","endLine":12,"endColumn":23},{"ruleId":"64","severity":1,"message":"65","line":15,"column":8,"nodeType":"66","endLine":15,"endColumn":10,"suggestions":"67"},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'handleChange' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isBoolean'. Either include it or remove the dependency array.","ArrayExpression",["70"],"no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},"Update the dependencies array to be: [isBoolean]",{"range":"73","text":"74"},[647,649],"[isBoolean]"]